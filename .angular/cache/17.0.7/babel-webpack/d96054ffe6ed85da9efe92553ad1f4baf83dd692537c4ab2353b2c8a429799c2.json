{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./user.service\";\nexport class AuthService {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.isAuthenticatedSubject = new BehaviorSubject(false);\n    this.AUTH_TOKEN_KEY = 'authToken';\n    this.isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n    this.checkAuthenticationStatus();\n    this.loadUsers();\n    this.loadOrders();\n  }\n  checkAuthenticationStatus() {\n    const authToken = localStorage.getItem(this.AUTH_TOKEN_KEY);\n    if (authToken) {\n      this.isAuthenticatedSubject.next(true);\n    }\n  }\n  loadUsers() {\n    this.userService.getAllUsers().subscribe(data => {\n      this.users = data['data'];\n    }, error => {\n      console.error('Error fetching users:', error);\n    });\n  }\n  loadOrders() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser && currentUser._id) {\n      let userId = currentUser._id;\n      this.userService.getOrders().subscribe(data => {\n        this.orders = data['data'].filter(order => order.user._id === userId);\n      }, error => {\n        console.error('Error fetching orders:', error);\n      });\n    } else {\n      console.error('No current user found in localStorage');\n    }\n    return this.orders;\n  }\n  login(credentials) {\n    const currentUser = this.users.find(user => credentials.username === user.username && credentials.password === user.password);\n    if (currentUser) {\n      let temp = {\n        username: currentUser.username,\n        _id: currentUser._id\n      };\n      localStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n      localStorage.setItem('currentUser', JSON.stringify(temp));\n      this.isAuthenticatedSubject.next(true);\n      this.router.navigate(['/dashboard']);\n      this.loadOrders();\n      return true;\n    } else if (credentials.username === 'demo' && credentials.password === 'password') {\n      localStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n      this.isAuthenticatedSubject.next(true);\n      this.router.navigate(['/dashboard']);\n      return true;\n    } else {\n      this.isAuthenticatedSubject.next(false);\n      return false;\n    }\n  }\n  logout() {\n    localStorage.clear();\n    this.isAuthenticatedSubject.next(false);\n    this.router.navigate(['/login']);\n    this.orders = [];\n  }\n  register(credentials) {\n    this.userService.postUser(credentials.username, credentials.password).subscribe(data => {\n      const status = data['status'];\n      console.log(status);\n      if (status == 'success') {\n        this.loadUsers();\n        this.router.navigate(['/login']);\n        return true;\n      } else {\n        this.isAuthenticatedSubject.next(false);\n        return false;\n      }\n    }, error => {\n      console.error('Error fetching users:', error);\n    });\n    return false;\n  }\n  createOrder(cart) {\n    this.userService.postOrder(cart, JSON.parse(localStorage.getItem('currentUser'))).subscribe(data => {\n      const status = data['status'];\n      console.log(status);\n      if (status == 'success') {\n        this.loadOrders();\n        //this.router.navigate(['/orders']);\n        return true;\n      } else {\n        this.isAuthenticatedSubject.next(false);\n        return false;\n      }\n    });\n    return false;\n  }\n  deleteOrder(order) {\n    this.userService.deleteOrder(order).subscribe(data => {\n      const status = data['status'];\n      console.log(status);\n      if (status == 'success') {\n        this.loadOrders();\n        this.router.navigate(['/orders']);\n        return true;\n      } else {\n        this.isAuthenticatedSubject.next(false);\n        return false;\n      }\n    });\n    return false;\n  }\n  isAuthenticated() {\n    return this.isAuthenticatedSubject.value;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","router","userService","isAuthenticatedSubject","AUTH_TOKEN_KEY","isAuthenticated$","asObservable","checkAuthenticationStatus","loadUsers","loadOrders","authToken","localStorage","getItem","next","getAllUsers","subscribe","data","users","error","console","currentUser","JSON","parse","_id","userId","getOrders","orders","filter","order","user","login","credentials","find","username","password","temp","setItem","stringify","navigate","logout","clear","register","postUser","status","log","createOrder","cart","postOrder","deleteOrder","isAuthenticated","value","_","i0","ɵɵinject","i1","Router","i2","UserService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\n\tprivate isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\n\tprivate readonly AUTH_TOKEN_KEY = 'authToken';\n\n\t\n\t isAuthenticated$: Observable<boolean> = this.isAuthenticatedSubject.asObservable();\n\n\tusers: any[];\n\torders: any[];\n\tconstructor(private router: Router,private userService: UserService) { \n\t\tthis.checkAuthenticationStatus();\n\t\tthis.loadUsers();\n\t\tthis.loadOrders();\n\t}\n\n\tprivate checkAuthenticationStatus() {\n\t\tconst authToken = localStorage.getItem(this.AUTH_TOKEN_KEY);\n\t\tif (authToken) {\n\t\t  this.isAuthenticatedSubject.next(true);\n\t\t}\n\t  }\n\n\tloadUsers() {\n\t\tthis.userService.getAllUsers().subscribe(\n\t\t  (data: any) => {\n\t\t\tthis.users = data['data'];\n\t\t  },\n\t\t  (error) => {\n\t\t\tconsole.error('Error fetching users:', error);\n\t\t  }\n\t\t);\n\t}\n\t\n\tloadOrders() {\n\t\tlet currentUser = JSON.parse(localStorage.getItem('currentUser') as string);\n\t  \n\t\n\t\tif (currentUser && currentUser._id) {\n\t\t  let userId = currentUser._id;\n\t\t  this.userService.getOrders().subscribe(\n\t\t\t(data: any) => {\n\t\t\t  this.orders = data['data'].filter((order: any) => order.user._id === userId);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t  console.error('Error fetching orders:', error);\n\t\t\t}\n\t\t  );\n\t\t} else {\n\t\t\n\t\t  console.error('No current user found in localStorage');\n\t\t \n\t\t}\n\t  \n\t\n\t\treturn this.orders;\n\t  }\n\t  \n\t\n\n\tlogin(credentials: { username: string; password: string }): boolean {\n\t\tconst currentUser=this.users.find((user) => credentials.username === user.username && credentials.password === user.password)\n\t\tif(currentUser){\n\t\t\tlet temp = {username:currentUser.username,_id:currentUser._id};\n\t\t\tlocalStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n\t\t\tlocalStorage.setItem('currentUser',JSON.stringify(temp));\n\t\t\tthis.isAuthenticatedSubject.next(true);\n\t\t\tthis.router.navigate(['/dashboard']);\n\t\t\tthis.loadOrders();\n\t\t\treturn true;\n\t\t}\n\t\telse if (credentials.username === 'demo' && credentials.password === 'password') {\n\t\t\tlocalStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n\t\t\tthis.isAuthenticatedSubject.next(true);\n\t\t\tthis.router.navigate(['/dashboard']);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.isAuthenticatedSubject.next(false);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t}\n\n\tlogout(): void {\n\t\tlocalStorage.clear();\n\t\tthis.isAuthenticatedSubject.next(false);\n\t\tthis.router.navigate(['/login']);\n\t\tthis.orders=[];\n\t}\n\n\tregister(credentials: { username: string; password: string }): boolean {\n\t\tthis.userService.postUser(credentials.username,credentials.password).subscribe( (data: any) => {\n\t\t\tconst status = data['status'];\n\t\t\tconsole.log(status);\n\t\t\tif(status=='success'){\n\t\t\t\tthis.loadUsers();\n\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isAuthenticatedSubject.next(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t  },\n\t\t  (error) => {\n\t\t\tconsole.error('Error fetching users:', error);\n\t\t  }\n\t\t);\n\t\treturn false;\n\t}\n\n\tcreateOrder(cart: any): boolean {\n\t\tthis.userService.postOrder(cart,JSON.parse(localStorage.getItem('currentUser') as string)).subscribe( (data: any) => {\n\t\t\tconst status = data['status'];\n\t\t\tconsole.log(status);\n\t\t\tif(status=='success'){\n\t\t\t\tthis.loadOrders();\n\t\t\t\t//this.router.navigate(['/orders']);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isAuthenticatedSubject.next(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t  });\n\t\t  return false;\n\t}\n\n\tdeleteOrder(order: any): boolean {\n\t\tthis.userService.deleteOrder(order).subscribe( (data: any) => {\n\t\t\tconst status = data['status'];\n\t\t\tconsole.log(status);\n\t\t\tif(status=='success'){\n\t\t\t\tthis.loadOrders();\n\t\t\t\tthis.router.navigate(['/orders']);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isAuthenticatedSubject.next(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t  });\n\t\t  return false;\n\t}\n\n\tisAuthenticated(): boolean {\n\t\treturn this.isAuthenticatedSubject.value;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}