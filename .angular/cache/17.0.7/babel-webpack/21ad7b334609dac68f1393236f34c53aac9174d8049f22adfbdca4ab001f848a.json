{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nexport class RegisterComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.erormessage = null;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      console.log('Registration data:', this.registerForm.value);\n      this.erormessage = null;\n      if (this.authService.register(this.registerForm.value)) {\n        this.erormessage = null;\n      } else {\n        this.erormessage = 'Invalid username or password';\n      }\n    } else {\n      this.erormessage = \"Invalid username or password\";\n    }\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"register-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"username\", \"formControlName\", \"email\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Register\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\" \", ctx.erormessage, \" \");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".register-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    width: 300px;\\n  }\\n  \\n  .register-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    margin-right: 10px;\\n  }\\n  \\n  input[_ngcontent-%COMP%] {\\n    padding: 5px;\\n    font-size: 16px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    padding: 5px 15px;\\n    font-size: 16px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsWUFBWTtFQUNkOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxpQkFBaUI7SUFDakIsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3Rlci1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWdpc3Rlci1jb250YWluZXIgZGl2IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXQge1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgcGFkZGluZzogNXB4IDE1cHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","RegisterComponent","constructor","formBuilder","authService","erormessage","ngOnInit","registerForm","group","email","required","password","minLength","onSubmit","valid","console","log","value","register","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\register\\register.component.ts","C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent implements OnInit{\n\n  registerForm: FormGroup;\n  erormessage: string | null = null;\n  \n  constructor(private formBuilder: FormBuilder,private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      console.log('Registration data:', this.registerForm.value);\n      this.erormessage = null;\n      if (this.authService.register(this.registerForm.value)) {\n        this.erormessage = null;\n      } else {\n        this.erormessage = 'Invalid username or password';\n      }\n    }\n    else{\n      this.erormessage=\"Invalid username or password\";\n    }\n  }\n\n}\n","<div class=\"register-container\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      \n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"username\" formControlName=\"email\">\n      </div>\n      <div>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\">\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n    <div>\n        {{erormessage}}\n    </div>\n  </div>\n  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,WAAwB,EAASC,WAAuB;IAAxD,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFhE,KAAAC,WAAW,GAAkB,IAAI;EAE+C;EAEhFC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACzCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACN,YAAY,CAACO,KAAK,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACT,YAAY,CAACU,KAAK,CAAC;MAC1D,IAAI,CAACZ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACD,WAAW,CAACc,QAAQ,CAAC,IAAI,CAACX,YAAY,CAACU,KAAK,CAAC,EAAE;QACtD,IAAI,CAACZ,WAAW,GAAG,IAAI;OACxB,MAAM;QACL,IAAI,CAACA,WAAW,GAAG,8BAA8B;;KAEpD,MACG;MACF,IAAI,CAACA,WAAW,GAAC,8BAA8B;;EAEnD;EAAC,QAAAc,CAAA,G;qBA3BUlB,iBAAiB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBzB,iBAAiB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT9Bb,EAAA,CAAAe,cAAA,aAAgC;QACKf,EAAA,CAAAgB,UAAA,sBAAAC,oDAAA;UAAA,OAAYH,GAAA,CAAArB,QAAA,EAAU;QAAA,EAAC;QAEtDO,EAAA,CAAAe,cAAA,UAAK;QACgBf,EAAA,CAAAkB,MAAA,aAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACjCnB,EAAA,CAAAoB,SAAA,eAA0D;QAC5DpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAe,cAAA,UAAK;QACmBf,EAAA,CAAAkB,MAAA,gBAAS;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACvCnB,EAAA,CAAAoB,SAAA,eAAgE;QAClEpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAe,cAAA,iBAAsB;QAAAf,EAAA,CAAAkB,MAAA,gBAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAEzCnB,EAAA,CAAAe,cAAA,WAAK;QACDf,EAAA,CAAAkB,MAAA,IACJ;QAAAlB,EAAA,CAAAmB,YAAA,EAAM;;;QAdAnB,EAAA,CAAAqB,SAAA,GAA0B;QAA1BrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAA3B,YAAA,CAA0B;QAa5Ba,EAAA,CAAAqB,SAAA,IACJ;QADIrB,EAAA,CAAAuB,kBAAA,MAAAT,GAAA,CAAA7B,WAAA,MACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}