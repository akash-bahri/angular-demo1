{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { loadOrders, deleteOrder } from '../reducers/postReducer';\nlet OrdersComponent = class OrdersComponent {\n  constructor(store) {\n    this.store = store;\n    this.status = \"\";\n    this.isLoggedIn$ = store.select(state => state.posts.isLoggedIn);\n    this.currentUser$ = store.select(state => state.posts.currentUser);\n    this.orders$ = store.select(state => state.posts.orders);\n    this.myOrder$ = this.orders$.pipe(map(orders => orders.filter(order => order.user._id === this.currentUser$._id)));\n  }\n  ngOnInit() {\n    this.store.dispatch(loadOrders());\n  }\n  delete(id) {\n    this.store.dispatch(deleteOrder({\n      id\n    }));\n    this.status = \"Order deleted\";\n    setTimeout(() => this.status = \"\", 600);\n  }\n};\nOrdersComponent = __decorate([Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})], OrdersComponent);\nexport { OrdersComponent };","map":{"version":3,"names":["Component","loadOrders","deleteOrder","OrdersComponent","constructor","store","status","isLoggedIn$","select","state","posts","isLoggedIn","currentUser$","currentUser","orders$","orders","myOrder$","pipe","map","filter","order","user","_id","ngOnInit","dispatch","delete","id","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\orders\\orders.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { loadOrders, deleteOrder } from '../reducers/postReducer';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  status: string = \"\";\r\n  isLoggedIn$: Observable<boolean>;\r\n  currentUser$: Observable<any>;\r\n  orders$: Observable<any[]>;\r\n  myOrder$: Observable<any[]>;\r\n\r\n  constructor(private store: Store<{ posts: any }>) {\r\n    this.isLoggedIn$ = store.select(state => state.posts.isLoggedIn);\r\n    this.currentUser$ = store.select(state => state.posts.currentUser);\r\n    this.orders$ = store.select(state => state.posts.orders);\r\n    this.myOrder$ = this.orders$.pipe(\r\n      map(orders => orders.filter(order => order.user._id === this.currentUser$._id))\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(loadOrders());\r\n  }\r\n\r\n  delete(id: string) {\r\n    this.store.dispatch(deleteOrder({ id }));\r\n    this.status = \"Order deleted\";\r\n    setTimeout(() => this.status = \"\", 600);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,UAAU,EAAEC,WAAW,QAAQ,yBAAyB;AAO1D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAO1BC,YAAoBC,KAA4B;IAA5B,KAAAA,KAAK,GAALA,KAAK;IANzB,KAAAC,MAAM,GAAW,EAAE;IAOjB,IAAI,CAACC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,UAAU,CAAC;IAChE,IAAI,CAACC,YAAY,GAAGP,KAAK,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACG,WAAW,CAAC;IAClE,IAAI,CAACC,OAAO,GAAGT,KAAK,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACK,MAAM,CAAC;IACxD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,OAAO,CAACG,IAAI,CAC/BC,GAAG,CAACH,MAAM,IAAIA,MAAM,CAACI,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,GAAG,KAAK,IAAI,CAACV,YAAY,CAACU,GAAG,CAAC,CAAC,CAChF;EACH;EAEAC,QAAQA,CAAA;IACN,IAAI,CAAClB,KAAK,CAACmB,QAAQ,CAACvB,UAAU,EAAE,CAAC;EACnC;EAEAwB,MAAMA,CAACC,EAAU;IACf,IAAI,CAACrB,KAAK,CAACmB,QAAQ,CAACtB,WAAW,CAAC;MAAEwB;IAAE,CAAE,CAAC,CAAC;IACxC,IAAI,CAACpB,MAAM,GAAG,eAAe;IAC7BqB,UAAU,CAAC,MAAM,IAAI,CAACrB,MAAM,GAAG,EAAE,EAAE,GAAG,CAAC;EACzC;CACD;AAzBYH,eAAe,GAAAyB,UAAA,EAL3B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW5B,eAAe,CAyB3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}