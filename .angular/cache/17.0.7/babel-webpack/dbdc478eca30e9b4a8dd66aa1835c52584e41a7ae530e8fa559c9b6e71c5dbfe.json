{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    console.log(this.authService.isAuthenticated());\n    if (this.authService.isAuthenticated()) {\n      if (state.url == '/login') {\n        this.router.navigate(['/dashboard']);\n      }\n      return true;\n    } else {\n      console.log(state);\n      if (state.url != '/login' && state.url != '/register') {\n        this.router.navigate(['/login']);\n        return false;\n      }\n      return true;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","next","state","console","log","isAuthenticated","url","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) { }\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        console.log(this.authService.isAuthenticated())\n        if (this.authService.isAuthenticated()) {\n            if (state.url == '/login') {\n                this.router.navigate(['/dashboard']);\n            }\n\n            return true; \n        } else {\n            console.log(state)\n            if (state.url != '/login' && state.url != '/register') {\n                this.router.navigate(['/login']);\n                return false;\n            }\n            return true;\n        }\n    }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAClBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAExEC,WAAWA,CAACC,IAA4B,EAAEC,KAA0B;IAChEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,WAAW,CAACO,eAAe,EAAE,CAAC;IAC/C,IAAI,IAAI,CAACP,WAAW,CAACO,eAAe,EAAE,EAAE;MACpC,IAAIH,KAAK,CAACI,GAAG,IAAI,QAAQ,EAAE;QACvB,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;MAGxC,OAAO,IAAI;KACd,MAAM;MACHJ,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAIA,KAAK,CAACI,GAAG,IAAI,QAAQ,IAAIJ,KAAK,CAACI,GAAG,IAAI,WAAW,EAAE;QACnD,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;;MAEhB,OAAO,IAAI;;EAEnB;EAAC,QAAAC,CAAA,G;qBAnBQZ,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATnB,SAAS;IAAAoB,OAAA,EAATpB,SAAS,CAAAqB,IAAA;IAAAC,UAAA,EAFN;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}