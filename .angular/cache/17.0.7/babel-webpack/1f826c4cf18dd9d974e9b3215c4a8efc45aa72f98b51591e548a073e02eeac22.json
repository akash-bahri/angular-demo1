{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class RegisterComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.erormessage = null;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.erormessage = null;\n      if (this.authService.register(this.registerForm.value)) {\n        this.erormessage = null;\n      } else {\n        this.erormessage = 'Invalid username or password';\n      }\n    } else {\n      this.erormessage = \"Invalid username or password\";\n    }\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"email\", \"id\", \"username\", \"formControlName\", \"username\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\"], [\"routerLink\", \"/login\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵtext(14, \"Register\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"a\", 8);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(18);\n        i0.ɵɵtextInterpolate1(\" \", ctx.erormessage, \" \");\n      }\n    },\n    dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".login-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 500px;\\n  margin: 0 auto;\\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  text-align: center;\\n  font-size: 25px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n  padding: 10px;\\n  width:300px;\\n  border: none;\\n  border-radius: 3px;\\n  box-shadow: 0px 2px 2px lightgrey;\\n  background-color: rgb(214, 214, 214);\\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  text-align: center;\\n  font-size: 25px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  padding: 10px;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  border: none;\\n  width:100%;\\n  border-radius: 3px;\\n  background-color: #3f72b5;\\n  color: white;\\n  cursor: pointer;\\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  text-align: center;\\n  font-size: 25px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #1f4777;\\n}\\nh2[_ngcontent-%COMP%] {\\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  text-align: center;\\n  font-size: 35px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGNBQWM7RUFDZCw0RUFBNEU7RUFDNUUsa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlDQUFpQztFQUNqQyxvQ0FBb0M7RUFDcEMsNEVBQTRFO0VBQzVFLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsb0JBQW9CO0VBQ3BCLFlBQVk7RUFDWixVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osZUFBZTtFQUNmLDRFQUE0RTtFQUM1RSxrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsNEVBQTRFO0VBQzVFLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiA1MDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBmb250LWZhbWlseTonR2lsbCBTYW5zJywgJ0dpbGwgU2FucyBNVCcsIENhbGlicmksICdUcmVidWNoZXQgTVMnLCBzYW5zLXNlcmlmO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIGlucHV0IHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgd2lkdGg6MzAwcHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICBib3gtc2hhZG93OiAwcHggMnB4IDJweCBsaWdodGdyZXk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxNCwgMjE0LCAyMTQpO1xyXG4gIGZvbnQtZmFtaWx5OidHaWxsIFNhbnMnLCAnR2lsbCBTYW5zIE1UJywgQ2FsaWJyaSwgJ1RyZWJ1Y2hldCBNUycsIHNhbnMtc2VyaWY7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMjVweDtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAgYnV0dG9uIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHdpZHRoOjEwMCU7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzZjcyYjU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBmb250LWZhbWlseTonR2lsbCBTYW5zJywgJ0dpbGwgU2FucyBNVCcsIENhbGlicmksICdUcmVidWNoZXQgTVMnLCBzYW5zLXNlcmlmO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIGJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFmNDc3NztcclxufVxyXG5oMiB7XHJcbiAgZm9udC1mYW1pbHk6J0dpbGwgU2FucycsICdHaWxsIFNhbnMgTVQnLCBDYWxpYnJpLCAnVHJlYnVjaGV0IE1TJywgc2Fucy1zZXJpZjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAzNXB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","RegisterComponent","constructor","formBuilder","authService","erormessage","ngOnInit","registerForm","group","username","required","email","password","minLength","onSubmit","valid","register","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\register\\register.component.ts","C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent implements OnInit{\n\n  registerForm: FormGroup;\n  erormessage: string | null = null;\n  \n  constructor(private formBuilder: FormBuilder,private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.erormessage = null;\n      if (this.authService.register(this.registerForm.value)) {\n        this.erormessage = null;\n      } else {\n        this.erormessage = 'Invalid username or password';\n      }\n    }\n    else{\n      this.erormessage=\"Invalid username or password\";\n    }\n  }\n\n}\n","<div class=\"login-container\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <h2>Register</h2>\n      <div class=\"form-group\">\n        <label for=\"username\">Email:</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <input type=\"email\" id=\"username\" formControlName=\"username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\">\n        <button type=\"submit\">Register</button>\n      </div>\n    </form><br/>\n    <a routerLink=\"/login\">Login</a>\n    <div>\n        {{erormessage}}\n    </div>\n  </div>\n  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,WAAwB,EAASC,WAAuB;IAAxD,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFhE,KAAAC,WAAW,GAAkB,IAAI;EAE+C;EAEhFC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACzCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,KAAK,CAAC,CAAC;MACvDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACP,YAAY,CAACQ,KAAK,EAAE;MAC3B,IAAI,CAACV,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACD,WAAW,CAACY,QAAQ,CAAC,IAAI,CAACT,YAAY,CAACU,KAAK,CAAC,EAAE;QACtD,IAAI,CAACZ,WAAW,GAAG,IAAI;OACxB,MAAM;QACL,IAAI,CAACA,WAAW,GAAG,8BAA8B;;KAEpD,MACG;MACF,IAAI,CAACA,WAAW,GAAC,8BAA8B;;EAEnD;EAAC,QAAAa,CAAA,G;qBA1BUjB,iBAAiB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBxB,iBAAiB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT9Bb,EAAA,CAAAe,cAAA,aAA6B;QACQf,EAAA,CAAAgB,UAAA,sBAAAC,oDAAA;UAAA,OAAYH,GAAA,CAAAnB,QAAA,EAAU;QAAA,EAAC;QACtDK,EAAA,CAAAe,cAAA,SAAI;QAAAf,EAAA,CAAAkB,MAAA,eAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QACjBnB,EAAA,CAAAe,cAAA,aAAwB;QACAf,EAAA,CAAAkB,MAAA,aAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAAAnB,EAAA,CAAAkB,MAAA,sCACpC;QAAAlB,EAAA,CAAAoB,SAAA,eAA6D;QAC/DpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAe,cAAA,aAAwB;QACAf,EAAA,CAAAkB,MAAA,iBAAS;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACvCnB,EAAA,CAAAoB,SAAA,gBAAgE;QAChEpB,EAAA,CAAAe,cAAA,iBAAsB;QAAAf,EAAA,CAAAkB,MAAA,gBAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAEpCnB,EAAA,CAAAoB,SAAA,UAAK;QACZpB,EAAA,CAAAe,cAAA,YAAuB;QAAAf,EAAA,CAAAkB,MAAA,aAAK;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;QAChCnB,EAAA,CAAAe,cAAA,WAAK;QACDf,EAAA,CAAAkB,MAAA,IACJ;QAAAlB,EAAA,CAAAmB,YAAA,EAAM;;;QAfAnB,EAAA,CAAAqB,SAAA,GAA0B;QAA1BrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAA1B,YAAA,CAA0B;QAc5BY,EAAA,CAAAqB,SAAA,IACJ;QADIrB,EAAA,CAAAuB,kBAAA,MAAAT,GAAA,CAAA5B,WAAA,MACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}