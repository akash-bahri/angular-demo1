{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.erormessage = null;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      console.log('Registration data:', this.registerForm.value);\n      this.erormessage = null;\n    } else {\n      this.erormessage = \"Invalid username or password\";\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","formBuilder","erormessage","ngOnInit","registerForm","group","username","required","email","password","minLength","onSubmit","valid","console","log","value","__decorate","selector","templateUrl","styleUrl"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent implements OnInit{\n\n  registerForm: FormGroup;\n  erormessage: string | null = null;\n  \n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      console.log('Registration data:', this.registerForm.value);\n      this.erormessage = null;\n    }\n    else{\n      this.erormessage=\"Invalid username or password\";\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAChD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,WAAW,GAAkB,IAAI;EAEe;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACzCC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACP,YAAY,CAACQ,KAAK,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACV,YAAY,CAACW,KAAK,CAAC;MAC1D,IAAI,CAACb,WAAW,GAAG,IAAI;KACxB,MACG;MACF,IAAI,CAACA,WAAW,GAAC,8BAA8B;;EAEnD;CAED;AAzBYH,iBAAiB,GAAAiB,UAAA,EAL7BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,QAAQ,EAAE;CACX,CAAC,C,EACWpB,iBAAiB,CAyB7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}