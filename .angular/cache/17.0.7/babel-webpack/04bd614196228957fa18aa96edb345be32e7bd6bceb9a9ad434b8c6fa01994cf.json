{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from './config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://smooth-comfort-405104.uc.r.appspot.com/document/';\n    this.userUrl = this.apiUrl + 'findAll/userx';\n    this.catalogUrl = this.apiUrl + 'findAll/catalog';\n    this.ordersUrl = this.apiUrl + 'findAll/orders';\n    this.postUserUrl = this.apiUrl + 'create/userx';\n  }\n  getAllUsers() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.userUrl, {\n      headers\n    });\n  }\n  getCatalog() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.catalogUrl, {\n      headers\n    });\n  }\n  getOrders() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.ordersUrl, {\n      headers\n    });\n  }\n  postUser(username, password) {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.post(this.userUrl, {\n      \"username\": username,\n      \"password\": password\n    }, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AppConfig","UserService","constructor","http","apiUrl","userUrl","catalogUrl","ordersUrl","postUserUrl","getAllUsers","headers","set","apiKey","get","getCatalog","getOrders","postUser","username","password","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppConfig } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = 'https://smooth-comfort-405104.uc.r.appspot.com/document/';\n  private userUrl = this.apiUrl + 'findAll/userx';\n  private catalogUrl = this.apiUrl + 'findAll/catalog';\n  private ordersUrl = this.apiUrl + 'findAll/orders';\n  private postUserUrl = this.apiUrl + 'create/userx';\n  constructor(private http: HttpClient) {}\n\n  getAllUsers(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.userUrl, {headers});\n  }\n  getCatalog(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.catalogUrl, {headers});\n  }\n  getOrders(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.ordersUrl, {headers});\n  }\n  postUser(username: string, password: string): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.post(this.userUrl, { \"username\":username, \"password\":password }, {headers});\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,SAAS,QAAQ,UAAU;;;AAKpC,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,MAAM,GAAG,0DAA0D;IACnE,KAAAC,OAAO,GAAG,IAAI,CAACD,MAAM,GAAG,eAAe;IACvC,KAAAE,UAAU,GAAG,IAAI,CAACF,MAAM,GAAG,iBAAiB;IAC5C,KAAAG,SAAS,GAAG,IAAI,CAACH,MAAM,GAAG,gBAAgB;IAC1C,KAAAI,WAAW,GAAG,IAAI,CAACJ,MAAM,GAAG,cAAc;EACX;EAEvCK,WAAWA,CAAA;IACT,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAACX,SAAS,CAACY,MAAM,CAAC;IACvE,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,IAAI,CAACR,OAAO,EAAE;MAACK;IAAO,CAAC,CAAC;EAC/C;EACAI,UAAUA,CAAA;IACR,MAAMJ,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAACX,SAAS,CAACY,MAAM,CAAC;IACvE,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE;MAACI;IAAO,CAAC,CAAC;EAClD;EACAK,SAASA,CAAA;IACP,MAAML,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAACX,SAAS,CAACY,MAAM,CAAC;IACvE,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,IAAI,CAACN,SAAS,EAAE;MAACG;IAAO,CAAC,CAAC;EACjD;EACAM,QAAQA,CAACC,QAAgB,EAAEC,QAAgB;IACzC,MAAMR,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAACX,SAAS,CAACY,MAAM,CAAC;IACvE,OAAO,IAAI,CAACT,IAAI,CAACgB,IAAI,CAAC,IAAI,CAACd,OAAO,EAAE;MAAE,UAAU,EAACY,QAAQ;MAAE,UAAU,EAACC;IAAQ,CAAE,EAAE;MAACR;IAAO,CAAC,CAAC;EAC9F;EAAC,QAAAU,CAAA,G;qBAxBUnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}