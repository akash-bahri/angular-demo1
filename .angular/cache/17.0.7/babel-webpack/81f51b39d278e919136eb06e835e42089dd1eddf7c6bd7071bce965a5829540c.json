{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from './config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://smooth-comfort-405104.uc.r.appspot.com/document/findAll';\n    this.userUrl = this.apiUrl + 'userx';\n    this.catalogUrl = this.apiUrl + 'catalog';\n  }\n  getAllUsers() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.apiUrl, {\n      headers\n    });\n  }\n  getCatalog() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.apiUrl, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AppConfig","UserService","constructor","http","apiUrl","userUrl","catalogUrl","getAllUsers","headers","set","apiKey","get","getCatalog","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppConfig } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = 'https://smooth-comfort-405104.uc.r.appspot.com/document/findAll';\n  private userUrl = this.apiUrl + 'userx';\n  private catalogUrl = this.apiUrl + 'catalog';\n  constructor(private http: HttpClient) {}\n\n  getAllUsers(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.apiUrl, {headers});\n  }\n  getCatalog(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.apiUrl, {headers});\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,SAAS,QAAQ,UAAU;;;AAKpC,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,iEAAiE;IAC1E,KAAAC,OAAO,GAAG,IAAI,CAACD,MAAM,GAAG,OAAO;IAC/B,KAAAE,UAAU,GAAG,IAAI,CAACF,MAAM,GAAG,SAAS;EACL;EAEvCG,WAAWA,CAAA;IACT,MAAMC,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAACT,SAAS,CAACU,MAAM,CAAC;IACvE,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACP,MAAM,EAAE;MAACI;IAAO,CAAC,CAAC;EAC9C;EACAI,UAAUA,CAAA;IACR,MAAMJ,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAACT,SAAS,CAACU,MAAM,CAAC;IACvE,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACP,MAAM,EAAE;MAACI;IAAO,CAAC,CAAC;EAC9C;EAAC,QAAAK,CAAA,G;qBAdUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}