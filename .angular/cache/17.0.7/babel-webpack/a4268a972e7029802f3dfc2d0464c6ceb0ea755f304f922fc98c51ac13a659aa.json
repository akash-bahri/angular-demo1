{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./user.service\";\nexport class AuthService {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.isAuthenticatedSubject = new BehaviorSubject(false);\n    this.AUTH_TOKEN_KEY = 'authToken';\n    // Expose the subject as an observable to be notified of changes\n    this.isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n    this.checkAuthenticationStatus();\n    this.loadUsers();\n    this.loadOrders();\n  }\n  checkAuthenticationStatus() {\n    const authToken = localStorage.getItem(this.AUTH_TOKEN_KEY);\n    if (authToken) {\n      this.isAuthenticatedSubject.next(true);\n    }\n  }\n  loadUsers() {\n    this.userService.getAllUsers().subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users);\n    }, error => {\n      console.error('Error fetching users:', error);\n    });\n  }\n  loadOrders() {\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    let userId = currentUser._id;\n    this.userService.getOrders().subscribe(data => {\n      this.orders = data['data'].filter(order => order._userId === userId);\n      console.log(this.orders); // Corrected from this.users to this.orders\n    }, error => {\n      console.error('Error fetching orders:', error);\n    });\n    return this.orders; // Note: This will return the initial value as subscriptions are asynchronous\n  }\n\n  login(credentials) {\n    const currentUser = this.users.find(user => credentials.username === user.username && credentials.password === user.password);\n    console.log(currentUser.username);\n    if (currentUser) {\n      localStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n      localStorage.setItem('currentUser', JSON.stringify(currentUser));\n      this.isAuthenticatedSubject.next(true);\n      this.router.navigate(['/dashboard']);\n      return true;\n    } else if (credentials.username === 'demo' && credentials.password === 'password') {\n      localStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n      this.isAuthenticatedSubject.next(true);\n      this.router.navigate(['/dashboard']);\n      return true;\n    } else {\n      this.isAuthenticatedSubject.next(false);\n      return false;\n    }\n  }\n  logout() {\n    localStorage.clear();\n    this.isAuthenticatedSubject.next(false);\n    this.router.navigate(['/login']);\n  }\n  register(credentials) {\n    this.userService.postUser(credentials.username, credentials.password).subscribe(data => {\n      const status = data['status'];\n      console.log(status);\n      if (status == 'success') {\n        this.loadUsers();\n        this.router.navigate(['/login']);\n        return true;\n      } else {\n        this.isAuthenticatedSubject.next(false);\n        return false;\n      }\n    }, error => {\n      console.error('Error fetching users:', error);\n    });\n    return false;\n  }\n  isAuthenticated() {\n    return this.isAuthenticatedSubject.value;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","router","userService","isAuthenticatedSubject","AUTH_TOKEN_KEY","isAuthenticated$","asObservable","checkAuthenticationStatus","loadUsers","loadOrders","authToken","localStorage","getItem","next","getAllUsers","subscribe","data","users","console","log","error","currentUser","JSON","parse","userId","_id","getOrders","orders","filter","order","_userId","login","credentials","find","user","username","password","setItem","stringify","navigate","logout","clear","register","postUser","status","isAuthenticated","value","_","i0","ɵɵinject","i1","Router","i2","UserService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\n\tprivate isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\n\tprivate readonly AUTH_TOKEN_KEY = 'authToken';\n\n\t // Expose the subject as an observable to be notified of changes\n\t isAuthenticated$: Observable<boolean> = this.isAuthenticatedSubject.asObservable();\n\n\tusers: any[];\n\torders: any[];\n\tconstructor(private router: Router,private userService: UserService) { \n\t\tthis.checkAuthenticationStatus();\n\t\tthis.loadUsers();\n\t\tthis.loadOrders();\n\t}\n\n\tprivate checkAuthenticationStatus() {\n\t\tconst authToken = localStorage.getItem(this.AUTH_TOKEN_KEY);\n\t\tif (authToken) {\n\t\t  this.isAuthenticatedSubject.next(true);\n\t\t}\n\t  }\n\n\tloadUsers() {\n\t\tthis.userService.getAllUsers().subscribe(\n\t\t  (data: any) => {\n\t\t\tthis.users = data['data'];\n\t\t\tconsole.log(this.users)\n\t\t  },\n\t\t  (error) => {\n\t\t\tconsole.error('Error fetching users:', error);\n\t\t  }\n\t\t);\n\t}\n\t\n\tloadOrders() {\n\t\tlet currentUser = JSON.parse(localStorage.getItem('currentUser') as string);\n\t\tlet userId = currentUser._id;\n\t\tthis.userService.getOrders().subscribe(\n\t\t\t(data: any) => {\n\t\t\t\tthis.orders = data['data'].filter((order: any) => order._userId === userId);\n\t\t\t\tconsole.log(this.orders); // Corrected from this.users to this.orders\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.error('Error fetching orders:', error);\n\t\t\t}\n\t\t);\n\t\treturn this.orders; // Note: This will return the initial value as subscriptions are asynchronous\n\t}\n\t\n\n\tlogin(credentials: { username: string; password: string }): boolean {\n\t\tconst currentUser=this.users.find((user) => credentials.username === user.username && credentials.password === user.password)\n\t\tconsole.log(currentUser.username);\n\t\tif(currentUser){\n\t\t\t\n\t\t\tlocalStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n\t\t\tlocalStorage.setItem('currentUser',JSON.stringify(currentUser));\n\t\t\tthis.isAuthenticatedSubject.next(true);\n\t\t\tthis.router.navigate(['/dashboard']);\n\t\t\treturn true;\n\t\t}\n\t\telse if (credentials.username === 'demo' && credentials.password === 'password') {\n\t\t\tlocalStorage.setItem(this.AUTH_TOKEN_KEY, 'Y');\n\t\t\tthis.isAuthenticatedSubject.next(true);\n\t\t\tthis.router.navigate(['/dashboard']);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.isAuthenticatedSubject.next(false);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t}\n\n\tlogout(): void {\n\t\tlocalStorage.clear();\n\t\tthis.isAuthenticatedSubject.next(false);\n\t\tthis.router.navigate(['/login']);\n\t}\n\n\tregister(credentials: { username: string; password: string }): boolean {\n\t\tthis.userService.postUser(credentials.username,credentials.password).subscribe( (data: any) => {\n\t\t\tconst status = data['status'];\n\t\t\tconsole.log(status);\n\t\t\tif(status=='success'){\n\t\t\t\tthis.loadUsers();\n\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isAuthenticatedSubject.next(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t  },\n\t\t  (error) => {\n\t\t\tconsole.error('Error fetching users:', error);\n\t\t  }\n\t\t);\n\t\treturn false;\n\t}\n\n\tisAuthenticated(): boolean {\n\t\treturn this.isAuthenticatedSubject.value;\n\t}\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;;AAMlD,OAAM,MAAOC,WAAW;EAUvBC,YAAoBC,MAAc,EAASC,WAAwB;IAA/C,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,WAAW,GAAXA,WAAW;IAR9C,KAAAC,sBAAsB,GAAG,IAAIL,eAAe,CAAU,KAAK,CAAC;IACnD,KAAAM,cAAc,GAAG,WAAW;IAE5C;IACA,KAAAC,gBAAgB,GAAwB,IAAI,CAACF,sBAAsB,CAACG,YAAY,EAAE;IAKlF,IAAI,CAACC,yBAAyB,EAAE;IAChC,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,UAAU,EAAE;EAClB;EAEQF,yBAAyBA,CAAA;IAChC,MAAMG,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACR,cAAc,CAAC;IAC3D,IAAIM,SAAS,EAAE;MACb,IAAI,CAACP,sBAAsB,CAACU,IAAI,CAAC,IAAI,CAAC;;EAEvC;EAEFL,SAASA,CAAA;IACR,IAAI,CAACN,WAAW,CAACY,WAAW,EAAE,CAACC,SAAS,CACrCC,IAAS,IAAI;MACf,IAAI,CAACC,KAAK,GAAGD,IAAI,CAAC,MAAM,CAAC;MACzBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,KAAK,CAAC;IACtB,CAAC,EACAG,KAAK,IAAI;MACXF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CACF;EACF;EAEAX,UAAUA,CAAA;IACT,IAAIY,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACZ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAW,CAAC;IAC3E,IAAIY,MAAM,GAAGH,WAAW,CAACI,GAAG;IAC5B,IAAI,CAACvB,WAAW,CAACwB,SAAS,EAAE,CAACX,SAAS,CACpCC,IAAS,IAAI;MACb,IAAI,CAACW,MAAM,GAAGX,IAAI,CAAC,MAAM,CAAC,CAACY,MAAM,CAAEC,KAAU,IAAKA,KAAK,CAACC,OAAO,KAAKN,MAAM,CAAC;MAC3EN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAC;IAC3B,CAAC,EACAP,KAAK,IAAI;MACTF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CACD;IACD,OAAO,IAAI,CAACO,MAAM,CAAC,CAAC;EACrB;;EAGAI,KAAKA,CAACC,WAAmD;IACxD,MAAMX,WAAW,GAAC,IAAI,CAACJ,KAAK,CAACgB,IAAI,CAAEC,IAAI,IAAKF,WAAW,CAACG,QAAQ,KAAKD,IAAI,CAACC,QAAQ,IAAIH,WAAW,CAACI,QAAQ,KAAKF,IAAI,CAACE,QAAQ,CAAC;IAC7HlB,OAAO,CAACC,GAAG,CAACE,WAAW,CAACc,QAAQ,CAAC;IACjC,IAAGd,WAAW,EAAC;MAEdV,YAAY,CAAC0B,OAAO,CAAC,IAAI,CAACjC,cAAc,EAAE,GAAG,CAAC;MAC9CO,YAAY,CAAC0B,OAAO,CAAC,aAAa,EAACf,IAAI,CAACgB,SAAS,CAACjB,WAAW,CAAC,CAAC;MAC/D,IAAI,CAAClB,sBAAsB,CAACU,IAAI,CAAC,IAAI,CAAC;MACtC,IAAI,CAACZ,MAAM,CAACsC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACpC,OAAO,IAAI;KACX,MACI,IAAIP,WAAW,CAACG,QAAQ,KAAK,MAAM,IAAIH,WAAW,CAACI,QAAQ,KAAK,UAAU,EAAE;MAChFzB,YAAY,CAAC0B,OAAO,CAAC,IAAI,CAACjC,cAAc,EAAE,GAAG,CAAC;MAC9C,IAAI,CAACD,sBAAsB,CAACU,IAAI,CAAC,IAAI,CAAC;MACtC,IAAI,CAACZ,MAAM,CAACsC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACpC,OAAO,IAAI;KACX,MAAM;MACN,IAAI,CAACpC,sBAAsB,CAACU,IAAI,CAAC,KAAK,CAAC;MACvC,OAAO,KAAK;;EAGd;EAEA2B,MAAMA,CAAA;IACL7B,YAAY,CAAC8B,KAAK,EAAE;IACpB,IAAI,CAACtC,sBAAsB,CAACU,IAAI,CAAC,KAAK,CAAC;IACvC,IAAI,CAACZ,MAAM,CAACsC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EACjC;EAEAG,QAAQA,CAACV,WAAmD;IAC3D,IAAI,CAAC9B,WAAW,CAACyC,QAAQ,CAACX,WAAW,CAACG,QAAQ,EAACH,WAAW,CAACI,QAAQ,CAAC,CAACrB,SAAS,CAAGC,IAAS,IAAI;MAC7F,MAAM4B,MAAM,GAAG5B,IAAI,CAAC,QAAQ,CAAC;MAC7BE,OAAO,CAACC,GAAG,CAACyB,MAAM,CAAC;MACnB,IAAGA,MAAM,IAAE,SAAS,EAAC;QACpB,IAAI,CAACpC,SAAS,EAAE;QAChB,IAAI,CAACP,MAAM,CAACsC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,IAAI;OACX,MACG;QACH,IAAI,CAACpC,sBAAsB,CAACU,IAAI,CAAC,KAAK,CAAC;QACvC,OAAO,KAAK;;IAEZ,CAAC,EACAO,KAAK,IAAI;MACXF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CACF;IACD,OAAO,KAAK;EACb;EAEAyB,eAAeA,CAAA;IACd,OAAO,IAAI,CAAC1C,sBAAsB,CAAC2C,KAAK;EACzC;EAAC,QAAAC,CAAA,G;qBAvGWhD,WAAW,EAAAiD,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvD,WAAW;IAAAwD,OAAA,EAAXxD,WAAW,CAAAyD,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}