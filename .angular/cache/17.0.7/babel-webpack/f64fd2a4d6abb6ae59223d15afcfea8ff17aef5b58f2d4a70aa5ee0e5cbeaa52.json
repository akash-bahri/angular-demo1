{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from './config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  // private postCatalogUrl = this.apiUrl + 'createorupdate/catalog';\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://smooth-comfort-405104.uc.r.appspot.com/document/';\n    this.getuserUrl = this.apiUrl + 'findAll/userx';\n    this.getcatalogUrl = this.apiUrl + 'findAll/catalog';\n    this.getordersUrl = this.apiUrl + 'findAll/orders';\n    this.postUserUrl = this.apiUrl + 'createorupdate/userx';\n    this.postOrderUrl = this.apiUrl + 'createorupdate/orders';\n    this.deleteOrderUrl = this.apiUrl + 'deleteOne/orders';\n  }\n  getAllUsers() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.getuserUrl, {\n      headers\n    });\n  }\n  getCatalog() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.getcatalogUrl, {\n      headers\n    });\n  }\n  getOrders() {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.get(this.getordersUrl, {\n      headers\n    });\n  }\n  postUser(username, password) {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.post(this.postUserUrl, {\n      \"username\": username,\n      \"password\": password\n    }, {\n      headers\n    });\n  }\n  postOrder(cart, user) {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.post(this.postOrderUrl, {\n      \"user\": user,\n      \"items\": cart\n    }, {\n      headers\n    });\n  }\n  deleteOrder(order) {\n    const headers = new HttpHeaders().set('Authorization', AppConfig.apiKey);\n    return this.http.delete(this.postOrderUrl + '/' + order._id, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AppConfig","UserService","constructor","http","apiUrl","getuserUrl","getcatalogUrl","getordersUrl","postUserUrl","postOrderUrl","deleteOrderUrl","getAllUsers","headers","set","apiKey","get","getCatalog","getOrders","postUser","username","password","post","postOrder","cart","user","deleteOrder","order","delete","_id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppConfig } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = 'https://smooth-comfort-405104.uc.r.appspot.com/document/';\n  private getuserUrl = this.apiUrl + 'findAll/userx';\n  private getcatalogUrl = this.apiUrl + 'findAll/catalog';\n  private getordersUrl = this.apiUrl + 'findAll/orders';\n  private postUserUrl = this.apiUrl + 'createorupdate/userx';\n  private postOrderUrl = this.apiUrl + 'createorupdate/orders';\n  private deleteOrderUrl = this.apiUrl + 'deleteOne/orders';\n  // private postCatalogUrl = this.apiUrl + 'createorupdate/catalog';\n  constructor(private http: HttpClient) {}\n\n  getAllUsers(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.getuserUrl, {headers});\n  }\n  getCatalog(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.getcatalogUrl, {headers});\n  }\n  getOrders(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.get(this.getordersUrl, {headers});\n  }\n  postUser(username: string, password: string): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.post(this.postUserUrl, { \"username\":username, \"password\":password }, {headers});\n  }\n  postOrder(cart: any, user: any): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.post(this.postOrderUrl, { \"user\":user, \"items\":cart }, {headers});\n  }\n  deleteOrder(order: any): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization',AppConfig.apiKey);\n    return this.http.delete(this.postOrderUrl + '/' + order._id, {headers});\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,SAAS,QAAQ,UAAU;;;AAKpC,OAAM,MAAOC,WAAW;EAStB;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARhB,KAAAC,MAAM,GAAG,0DAA0D;IACnE,KAAAC,UAAU,GAAG,IAAI,CAACD,MAAM,GAAG,eAAe;IAC1C,KAAAE,aAAa,GAAG,IAAI,CAACF,MAAM,GAAG,iBAAiB;IAC/C,KAAAG,YAAY,GAAG,IAAI,CAACH,MAAM,GAAG,gBAAgB;IAC7C,KAAAI,WAAW,GAAG,IAAI,CAACJ,MAAM,GAAG,sBAAsB;IAClD,KAAAK,YAAY,GAAG,IAAI,CAACL,MAAM,GAAG,uBAAuB;IACpD,KAAAM,cAAc,GAAG,IAAI,CAACN,MAAM,GAAG,kBAAkB;EAElB;EAEvCO,WAAWA,CAAA;IACT,MAAMC,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,eAAe,EAACb,SAAS,CAACc,MAAM,CAAC;IACvE,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,IAAI,CAACV,UAAU,EAAE;MAACO;IAAO,CAAC,CAAC;EAClD;EACAI,UAAUA,CAAA;IACR,MAAMJ,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,eAAe,EAACb,SAAS,CAACc,MAAM,CAAC;IACvE,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,IAAI,CAACT,aAAa,EAAE;MAACM;IAAO,CAAC,CAAC;EACrD;EACAK,SAASA,CAAA;IACP,MAAML,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,eAAe,EAACb,SAAS,CAACc,MAAM,CAAC;IACvE,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,IAAI,CAACR,YAAY,EAAE;MAACK;IAAO,CAAC,CAAC;EACpD;EACAM,QAAQA,CAACC,QAAgB,EAAEC,QAAgB;IACzC,MAAMR,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,eAAe,EAACb,SAAS,CAACc,MAAM,CAAC;IACvE,OAAO,IAAI,CAACX,IAAI,CAACkB,IAAI,CAAC,IAAI,CAACb,WAAW,EAAE;MAAE,UAAU,EAACW,QAAQ;MAAE,UAAU,EAACC;IAAQ,CAAE,EAAE;MAACR;IAAO,CAAC,CAAC;EAClG;EACAU,SAASA,CAACC,IAAS,EAAEC,IAAS;IAC5B,MAAMZ,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,eAAe,EAACb,SAAS,CAACc,MAAM,CAAC;IACvE,OAAO,IAAI,CAACX,IAAI,CAACkB,IAAI,CAAC,IAAI,CAACZ,YAAY,EAAE;MAAE,MAAM,EAACe,IAAI;MAAE,OAAO,EAACD;IAAI,CAAE,EAAE;MAACX;IAAO,CAAC,CAAC;EACpF;EACAa,WAAWA,CAACC,KAAU;IACpB,MAAMd,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,eAAe,EAACb,SAAS,CAACc,MAAM,CAAC;IACvE,OAAO,IAAI,CAACX,IAAI,CAACwB,MAAM,CAAC,IAAI,CAAClB,YAAY,GAAG,GAAG,GAAGiB,KAAK,CAACE,GAAG,EAAE;MAAChB;IAAO,CAAC,CAAC;EACzE;EAAC,QAAAiB,CAAA,G;qBAnCU5B,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjC,WAAW;IAAAkC,OAAA,EAAXlC,WAAW,CAAAmC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}