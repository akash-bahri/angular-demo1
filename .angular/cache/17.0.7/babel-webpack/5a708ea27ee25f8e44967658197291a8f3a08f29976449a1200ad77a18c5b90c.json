{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginError, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.loginError = null;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      if (this.authService.login(this.loginForm.value)) {\n        this.loginError = null;\n      } else {\n        this.loginError = 'Invalid username or password';\n      }\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 3,\n    consts: [[1, \"login-container\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [\"routerLink\", \"/register\"], [1, \"error-message\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"button\", 8);\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\")(17, \"a\", 9);\n        i0.ɵɵtext(18, \"Register\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","loginError","LoginComponent","constructor","fb","authService","ngOnInit","loginForm","group","username","required","password","onSubmit","valid","console","log","value","login","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_3_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵelement","ɵɵproperty","invalid"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\login\\login.component.ts","C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loginError: string | null = null;\n\n\n  constructor(private fb: FormBuilder, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value)\n\n      if (this.authService.login(this.loginForm.value)) {\n        this.loginError = null;\n      } else {\n        this.loginError = 'Invalid username or password';\n      }\n    }\n  }\n\n}\n","<div class=\"login-container\">\n    <h2>Login</h2>\n    <div *ngIf=\"loginError\" class=\"error-message\">\n      {{ loginError }}\n    </div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" formControlName=\"username\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n      </div>\n    </form>\n    <div>\n      <a routerLink=\"/register\">Register</a>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}