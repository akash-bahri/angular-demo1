{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.erormessage = null;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.erormessage = null;\n      if (this.authService.register(this.registerForm.value)) {\n        this.erormessage = null;\n      } else {\n        this.erormessage = 'Invalid username or password';\n      }\n    } else {\n      this.erormessage = \"Invalid username or password\";\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","formBuilder","authService","erormessage","ngOnInit","registerForm","group","username","required","email","password","minLength","onSubmit","valid","register","value","__decorate","selector","templateUrl","styleUrl"],"sources":["C:\\Users\\Akash Bahri\\Documents\\Husky\\INFO 6150 WEB\\tryangular\\angular12-ws\\angular-demo1\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent implements OnInit{\n\n  registerForm: FormGroup;\n  erormessage: string | null = null;\n  \n  constructor(private formBuilder: FormBuilder,private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.erormessage = null;\n      if (this.authService.register(this.registerForm.value)) {\n        this.erormessage = null;\n      } else {\n        this.erormessage = 'Invalid username or password';\n      }\n    }\n    else{\n      this.erormessage=\"Invalid username or password\";\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAChD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,WAAwB,EAASC,WAAuB;IAAxD,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFhE,KAAAC,WAAW,GAAkB,IAAI;EAE+C;EAEhFC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACzCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,KAAK,CAAC,CAAC;MACvDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACP,YAAY,CAACQ,KAAK,EAAE;MAC3B,IAAI,CAACV,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACD,WAAW,CAACY,QAAQ,CAAC,IAAI,CAACT,YAAY,CAACU,KAAK,CAAC,EAAE;QACtD,IAAI,CAACZ,WAAW,GAAG,IAAI;OACxB,MAAM;QACL,IAAI,CAACA,WAAW,GAAG,8BAA8B;;KAEpD,MACG;MACF,IAAI,CAACA,WAAW,GAAC,8BAA8B;;EAEnD;CAED;AA5BYJ,iBAAiB,GAAAiB,UAAA,EAL7BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,QAAQ,EAAE;CACX,CAAC,C,EACWpB,iBAAiB,CA4B7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}